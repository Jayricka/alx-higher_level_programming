============================
How to Use 4-print_square.py
This module presents a function named "print_square(size)" that is used to print squares.

Usage
Squares are printed using the "#" character. The "size" parameter determines the height and width of the square.

::

>>> print_square = __import__('4-print_square').print_square
>>> print_square(1)
#
::

>>> print_square(4)
####
####
####
####
::

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########
If the "size" is set to zero, nothing will be printed.

::

>>> print_square(0)
Invalid Sizes
The "size" parameter must be an integer. Otherwise, a TypeError will be raised.

::

>>> print_square("not an int")
Traceback (most recent call last):
TypeError: size must be an integer
::

>>> print_square(5.5)
Traceback (most recent call last):
TypeError: size must be an integer
::

>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer
If the "size" is less than zero, a ValueError will be raised.

::

>>> print_square(-7)
Traceback (most recent call last):
ValueError: size must be >= 0
Note that type-checking is performed before value-checking.

::

>>> print_square(-7.5)
Traceback (most recent call last):
TypeError: size must be an integer
At least one argument must be provided.

::

>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'

